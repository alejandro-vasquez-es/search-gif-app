{"version":3,"sources":["components/AddCategory.js","components/GifCollectionItem.js","helpers/getGifts.js","components/GifCollection.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","placeholder","GifCollectionItem","id","title","url","className","alt","src","getGifs","category","a","encodeURI","fetch","response","json","data","gifs","map","gif","images","downsized_medium","GifCollection","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","gift","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"uLAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAM,OAAKP,GAAL,mBAAmBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAO,OACPC,MAAST,EACTU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,QAiBfG,YAAc,qC,QCvBjBC,EAAoB,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAG3C,OACI,sBAAKC,UAAU,0CAAf,UACI,qBAAKC,IAAKH,EAAOI,IAAKH,IACtB,4BAAKD,Q,uBCRJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAWF,GAD/C,+DAEIG,MAAMR,GAFV,cAEbS,EAFa,gBAGEA,EAASC,OAHX,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCKPK,EAAgB,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAE3B,ECJwB,SAACA,GAEzB,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNO,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OAnBAC,qBAAU,WAENjB,EAAQC,GAEHiB,MAAK,SAAAV,GAEFQ,EAAS,CACLT,KAAMC,EACNM,SAAS,SAKtB,CAACb,IAGJkB,YAAW,cACT,KAEKJ,EDtBwBK,CAAanB,GAAhCU,EAAZ,EAAOJ,KAAaO,EAApB,EAAoBA,QAEpB,OACI,qCACI,6BAAKb,IAEJa,GAAW,mBAAGjB,UAAY,oCAAf,wBAEZ,qBAAKA,UAAU,kBAAf,SAEQc,EAAOF,KAAI,SAACY,GAAD,OACP,cAAC,EAAD,eAEQA,GADIA,EAAK3B,aEf5B4B,EAAe,WAGxB,MAAoC3C,mBAAS,CAAC,gBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAEA,OACI,qCACI,oBAAImB,UAAY,qCAAhB,0BACA,cAAC,EAAD,CAAanB,cAAiBA,IAC9B,uBAEA,6BAEQ6C,EAAWd,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAYA,GACPA,Y,MCdjCuB,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2dbe89ed.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories((categs => [inputValue,...categs]));\r\n            setInputValue('')\r\n        }\r\n    }   \r\n\r\n    return ( \r\n        <form onSubmit = {handleSubmit}>\r\n            <input \r\n                type = \"text\"\r\n                value = {inputValue}\r\n                onChange = {handleInputChange}\r\n                placeholder = 'Search your gif collection...'\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes= {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifCollectionItem = ( {id, title, url} ) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card  animate__animated animate__fadeIn\">\r\n            <img alt={title} src={url} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=15&api_key=w8PQTRVGJpKfUGWhSd0Ev7Gj47jcVjCK`;\r\n    const response = await fetch(url);\r\n    const {data} = await response.json();\r\n    \r\n    const gifs = data.map(gif => {\r\n        return {\r\n            id: gif.id,\r\n            title: gif.title,\r\n            url: gif.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { GifCollectionItem } from './GifCollectionItem.js';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs.js';\r\n\r\nexport const GifCollection = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n    \r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && <p className = ' animate__animated animate__flash'>Loading...</p>}\r\n\r\n            <div className='card-collection'>\r\n                {\r\n                    images.map((gift ) =>(\r\n                        <GifCollectionItem\r\n                            key = { gift.id }\r\n                            {...gift}\r\n                        />\r\n                ))}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifCollection.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifts.js\";\r\n\r\nexport const useFetchGifs = (category) =>{\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category)\r\n    \r\n            .then(gifs => {\r\n    \r\n                setState({\r\n                    data: gifs,\r\n                    loading: false\r\n\r\n                });    \r\n    \r\n        })  \r\n    }, [category])\r\n\r\n\r\n    setTimeout(()=>{\r\n    },2000)\r\n\r\n    return state\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory.js';\r\nimport {GifCollection} from './components/GifCollection.js';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One punch man', 'Tokyo ghoul', 'Dragon Ball']\r\n    const [categories, setCategories] = useState(['Sailor Moon']);\r\n\r\n    return (\r\n        <>\r\n            <h2 className = ' animate__animated animate__fadeIn'>GifExpertApp</h2>\r\n            <AddCategory setCategories = {setCategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifCollection\r\n                            category = {category}\r\n                            key={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp.js';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp / >,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}